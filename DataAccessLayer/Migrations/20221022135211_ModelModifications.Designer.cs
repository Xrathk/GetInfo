// <auto-generated />
using System;
using DataAccessLayer.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccessLayer.Migrations
{
    [DbContext(typeof(GetInfoDbContext))]
    [Migration("20221022135211_ModelModifications")]
    partial class ModelModifications
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DomainLayer.Entities.AppUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("EMail")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("Id");

                    b.ToTable("AppUsers");
                });

            modelBuilder.Entity("DomainLayer.Entities.AppUserRequests", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AppUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastNewsRequest")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastWeatherRequest")
                        .HasColumnType("datetime2");

                    b.Property<int>("NewsRequests")
                        .HasColumnType("int");

                    b.Property<int>("WeatherRequests")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId")
                        .IsUnique();

                    b.ToTable("AppUserRequestsOverview");
                });

            modelBuilder.Entity("DomainLayer.Entities.AppUserSession", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AppUserID")
                        .HasColumnType("int");

                    b.Property<bool>("SessionActive")
                        .HasColumnType("bit");

                    b.Property<string>("SessionId")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("Id");

                    b.HasIndex("AppUserID")
                        .IsUnique();

                    b.ToTable("AppUserSessions");
                });

            modelBuilder.Entity("DomainLayer.Entities.NewsRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AverageResults")
                        .HasColumnType("int");

                    b.Property<string>("Keyword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastRequested")
                        .HasColumnType("datetime2");

                    b.Property<int>("TimesRequested")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("NewsRequests");
                });

            modelBuilder.Entity("DomainLayer.Entities.UserDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<int>("AppUserId")
                        .HasColumnType("int");

                    b.Property<string>("CountryOfOrigin")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("CurrentLocation")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("LastName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId")
                        .IsUnique();

                    b.ToTable("UserDetails");
                });

            modelBuilder.Entity("DomainLayer.Entities.WeatherRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<double>("LastRecordedTemperature")
                        .HasColumnType("float");

                    b.Property<DateTime>("LastRequested")
                        .HasColumnType("datetime2");

                    b.Property<string>("LocationName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<double>("MaxRecordedTemperature")
                        .HasColumnType("float");

                    b.Property<double>("MinRecordedTemperature")
                        .HasColumnType("float");

                    b.Property<int>("TimesRequested")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("WeatherRequests");
                });

            modelBuilder.Entity("DomainLayer.Entities.AppUserRequests", b =>
                {
                    b.HasOne("DomainLayer.Entities.AppUser", "AppUser")
                        .WithOne("AppUserRequests")
                        .HasForeignKey("DomainLayer.Entities.AppUserRequests", "AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");
                });

            modelBuilder.Entity("DomainLayer.Entities.AppUserSession", b =>
                {
                    b.HasOne("DomainLayer.Entities.AppUser", "AppUser")
                        .WithOne("AppUserSession")
                        .HasForeignKey("DomainLayer.Entities.AppUserSession", "AppUserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");
                });

            modelBuilder.Entity("DomainLayer.Entities.UserDetails", b =>
                {
                    b.HasOne("DomainLayer.Entities.AppUser", "AppUser")
                        .WithOne("UserDetails")
                        .HasForeignKey("DomainLayer.Entities.UserDetails", "AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");
                });

            modelBuilder.Entity("DomainLayer.Entities.AppUser", b =>
                {
                    b.Navigation("AppUserRequests");

                    b.Navigation("AppUserSession");

                    b.Navigation("UserDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
